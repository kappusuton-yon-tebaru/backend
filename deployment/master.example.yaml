apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system-role
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["create", "delete", "get"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "create", "delete", "patch", "list"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["create", "delete", "patch"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["create", "delete", "get", "list"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["create"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: system
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system-role-default
roleRef:
  kind: ClusterRole
  name: system-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: system
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-deployment
  namespace: kube-system
  labels:
    app: agent
    platform: snapping-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agent
  template:
    metadata:
      labels:
        app: agent
        platform: snapping-service
    spec:
      serviceAccountName: system
      containers:
        - name: agent
          image: <@AGENT_IMAGE_URI>
          ports:
            - containerPort: 3000
          env:
            - name: IN_CLUSTER
              value: "true"
            - name: DEVELOPMENT
              value: "false"
            - name: KUBE_NAMESPACE
              value: "<@KUBE_NAMESPACE>"
            - name: MONGO_URI
              value: "<@MONGO_URI>"
            - name: MONGO_DATABASE_NAME
              value: "<@MONGO_DATABASE_NAME>"
            - name: AGENT_PORT
              value: "<@AGENT_PORT>"
            - name: WORKER_IMAGE_URI
              value: "<@WORKER_IMAGE_URI>"
            - name: BACKEND_PORT
              value: "<@BACKEND_PORT>"
            - name: BACKEND_AGENT_ENDPOINT
              value: "<@BACKEND_AGENT_ENDPOINT>"
            - name: CONSUMER_QUEUE_URI
              value: "<@CONSUMER_QUEUE_URI>"
            - name: CONSUMER_ORGANIZATION_NAME
              value: "<@CONSUMER_ORGANIZATION_NAME>"
---
apiVersion: v1
kind: Service
metadata:
  name: agent-service
  namespace: kube-system
  labels:
    platform: snapping-service
spec:
  selector:
    app: agent
  type: NodePort # temporaly fix, so we dont have to port-forward everytime
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer-deployment
  namespace: kube-system
  labels:
    app: consumer
    platform: snapping-service
spec:
  replicas: 4
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
        platform: snapping-service
    spec:
      serviceAccountName: system
      containers:
        - name: consumer
          image: <@WORKER_IMAGE_URI>
          env:
            - name: IN_CLUSTER
              value: "true"
            - name: DEVELOPMENT
              value: "false"
            - name: KUBE_NAMESPACE
              value: "<@KUBE_NAMESPACE>"
            - name: MONGO_URI
              value: "<@MONGO_URI>"
            - name: MONGO_DATABASE_NAME
              value: "<@MONGO_DATABASE_NAME>"
            - name: AGENT_PORT
              value: "<@AGENT_PORT>"
            - name: WORKER_IMAGE_URI
              value: "<@WORKER_IMAGE_URI>"
            - name: BACKEND_PORT
              value: "<@BACKEND_PORT>"
            - name: BACKEND_AGENT_ENDPOINT
              value: "<@BACKEND_AGENT_ENDPOINT>"
            - name: CONSUMER_QUEUE_URI
              value: "<@CONSUMER_QUEUE_URI>"
            - name: CONSUMER_ORGANIZATION_NAME
              value: "<@CONSUMER_ORGANIZATION_NAME>"
